package view;

import controller.Controller;
import javax.swing.JOptionPane;

/**
 * Graphical user interface class
 *
 * @author Marek
 * @version 3.0
 */
public class Gui extends javax.swing.JFrame {
    private int actualRow = 0;
    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
    }
    
    /**
     * Creates new form Gui with filled textfield
     * @param number textfield entry
     */
    public Gui(String number) {
        initComponents();
        numberTextField.setText(number);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoLabel = new javax.swing.JLabel();
        numberTextField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        infoLabel.setText("Enter a valid roman or arabic number in range  - 3999 ");

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Before", "Converted"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        historyTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(historyTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(submitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(numberTextField)
            .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(infoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        numberTextField.getText();
        Controller controller = new Controller(numberTextField.getText());
        String converted = controller.getConverted();
        JOptionPane.showMessageDialog(this, converted, "title", JOptionPane.INFORMATION_MESSAGE);
        if(!converted.contains("Error")){
            if(actualRow >= historyTable.getRowCount()){
                for(int i = 0; i < historyTable.getRowCount() - 1; i++){
                    historyTable.setValueAt(historyTable.getValueAt(i + 1, 0), i, 0);
                    historyTable.setValueAt(historyTable.getValueAt(i + 1, 1), i, 1);
                }
                historyTable.setValueAt(numberTextField.getText().toUpperCase(), actualRow - 1, 0);
                historyTable.setValueAt(converted, actualRow - 1, 1);
                
            }
            else{
                historyTable.setValueAt(numberTextField.getText().toUpperCase(), actualRow, 0);
                historyTable.setValueAt(converted, actualRow, 1);
                actualRow++;
            }
        }     
    }//GEN-LAST:event_submitButtonActionPerformed

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable historyTable;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numberTextField;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
